
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGNMENT DIVIDE EQUAL_TO ERR GREATER_THAN GREATER_THAN_OR_EQUAL INT INTEGER_DIVISION LBRACKET LESS_THAN LESS_THAN_OR_EQUAL LIST LPAREN MINUS NOT_EQUAL PLUS POW RBRACKET REAL RPAREN TIMES VAR\n        expression : expression PLUS term\n                  | expression MINUS term\n                  | expression EQUAL_TO term\n                  | expression NOT_EQUAL term\n                  | expression GREATER_THAN term\n                  | expression GREATER_THAN_OR_EQUAL term\n                  | expression LESS_THAN term\n                  | expression LESS_THAN_OR_EQUAL term\n        expression : term\n        term : term TIMES factor\n             | term DIVIDE factor\n             | term INTEGER_DIVISION factor\n             | term POW factor\n        term : factor\n        factor : INT\n              | REAL\n        factor : VARfactor : LIST LBRACKET expression RBRACKETfactor : LPAREN expression RPARENexpression : VAR ASSIGNMENT expression'
    
_lr_action_items = {'VAR':([0,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,],[3,3,25,25,25,25,25,25,25,25,25,25,25,25,3,3,]),'INT':([0,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'REAL':([0,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'LIST':([0,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'LPAREN':([0,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'$end':([1,2,3,4,5,6,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,],[0,-9,-17,-14,-15,-16,-1,-17,-2,-3,-4,-5,-6,-7,-8,-10,-11,-12,-13,-20,-19,-18,]),'PLUS':([1,2,3,4,5,6,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[9,-9,-17,-14,-15,-16,9,-1,-17,-2,-3,-4,-5,-6,-7,-8,-10,-11,-12,-13,9,9,-19,-18,]),'MINUS':([1,2,3,4,5,6,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[10,-9,-17,-14,-15,-16,10,-1,-17,-2,-3,-4,-5,-6,-7,-8,-10,-11,-12,-13,10,10,-19,-18,]),'EQUAL_TO':([1,2,3,4,5,6,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[11,-9,-17,-14,-15,-16,11,-1,-17,-2,-3,-4,-5,-6,-7,-8,-10,-11,-12,-13,11,11,-19,-18,]),'NOT_EQUAL':([1,2,3,4,5,6,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[12,-9,-17,-14,-15,-16,12,-1,-17,-2,-3,-4,-5,-6,-7,-8,-10,-11,-12,-13,12,12,-19,-18,]),'GREATER_THAN':([1,2,3,4,5,6,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[13,-9,-17,-14,-15,-16,13,-1,-17,-2,-3,-4,-5,-6,-7,-8,-10,-11,-12,-13,13,13,-19,-18,]),'GREATER_THAN_OR_EQUAL':([1,2,3,4,5,6,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[14,-9,-17,-14,-15,-16,14,-1,-17,-2,-3,-4,-5,-6,-7,-8,-10,-11,-12,-13,14,14,-19,-18,]),'LESS_THAN':([1,2,3,4,5,6,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[15,-9,-17,-14,-15,-16,15,-1,-17,-2,-3,-4,-5,-6,-7,-8,-10,-11,-12,-13,15,15,-19,-18,]),'LESS_THAN_OR_EQUAL':([1,2,3,4,5,6,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[16,-9,-17,-14,-15,-16,16,-1,-17,-2,-3,-4,-5,-6,-7,-8,-10,-11,-12,-13,16,16,-19,-18,]),'RPAREN':([2,3,4,5,6,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,],[-9,-17,-14,-15,-16,39,-1,-17,-2,-3,-4,-5,-6,-7,-8,-10,-11,-12,-13,-20,-19,-18,]),'RBRACKET':([2,3,4,5,6,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,],[-9,-17,-14,-15,-16,-1,-17,-2,-3,-4,-5,-6,-7,-8,-10,-11,-12,-13,-20,40,-19,-18,]),'TIMES':([2,3,4,5,6,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,],[17,-17,-14,-15,-16,17,-17,17,17,17,17,17,17,17,-10,-11,-12,-13,-19,-18,]),'DIVIDE':([2,3,4,5,6,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,],[18,-17,-14,-15,-16,18,-17,18,18,18,18,18,18,18,-10,-11,-12,-13,-19,-18,]),'INTEGER_DIVISION':([2,3,4,5,6,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,],[19,-17,-14,-15,-16,19,-17,19,19,19,19,19,19,19,-10,-11,-12,-13,-19,-18,]),'POW':([2,3,4,5,6,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,],[20,-17,-14,-15,-16,20,-17,20,20,20,20,20,20,20,-10,-11,-12,-13,-19,-18,]),'ASSIGNMENT':([3,],[21,]),'LBRACKET':([7,],[22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,8,21,22,],[1,23,37,38,]),'term':([0,8,9,10,11,12,13,14,15,16,21,22,],[2,2,24,26,27,28,29,30,31,32,2,2,]),'factor':([0,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,],[4,4,4,4,4,4,4,4,4,4,33,34,35,36,4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS term','expression',3,'p_expression_binary','syntax_analyzer.py',13),
  ('expression -> expression MINUS term','expression',3,'p_expression_binary','syntax_analyzer.py',14),
  ('expression -> expression EQUAL_TO term','expression',3,'p_expression_binary','syntax_analyzer.py',15),
  ('expression -> expression NOT_EQUAL term','expression',3,'p_expression_binary','syntax_analyzer.py',16),
  ('expression -> expression GREATER_THAN term','expression',3,'p_expression_binary','syntax_analyzer.py',17),
  ('expression -> expression GREATER_THAN_OR_EQUAL term','expression',3,'p_expression_binary','syntax_analyzer.py',18),
  ('expression -> expression LESS_THAN term','expression',3,'p_expression_binary','syntax_analyzer.py',19),
  ('expression -> expression LESS_THAN_OR_EQUAL term','expression',3,'p_expression_binary','syntax_analyzer.py',20),
  ('expression -> term','expression',1,'p_expression_term','syntax_analyzer.py',29),
  ('term -> term TIMES factor','term',3,'p_term_binary','syntax_analyzer.py',34),
  ('term -> term DIVIDE factor','term',3,'p_term_binary','syntax_analyzer.py',35),
  ('term -> term INTEGER_DIVISION factor','term',3,'p_term_binary','syntax_analyzer.py',36),
  ('term -> term POW factor','term',3,'p_term_binary','syntax_analyzer.py',37),
  ('term -> factor','term',1,'p_term_factor','syntax_analyzer.py',42),
  ('factor -> INT','factor',1,'p_factor_number','syntax_analyzer.py',47),
  ('factor -> REAL','factor',1,'p_factor_number','syntax_analyzer.py',48),
  ('factor -> VAR','factor',1,'p_factor_var','syntax_analyzer.py',53),
  ('factor -> LIST LBRACKET expression RBRACKET','factor',4,'p_factor_list','syntax_analyzer.py',57),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','syntax_analyzer.py',61),
  ('expression -> VAR ASSIGNMENT expression','expression',3,'p_assignment','syntax_analyzer.py',65),
]
